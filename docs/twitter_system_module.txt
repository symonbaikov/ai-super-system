                        –¢–≤–∏—Ç—Ç–µ—Ä –ø–∞—Ä—Å–µ—Ä ( –º–æ–¥—É–ª—å)

–í–æ—Ç –∫—Ä–∞—Ç–∫–æ–µ, –ø–æ–Ω—è—Ç–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –º–æ–∂–Ω–æ –ø—Ä—è–º–æ –≤—Å—Ç–∞–≤–∏—Ç—å –≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é –¥–ª—è —Ñ—Ä–∏–ª–∞–Ω—Å–µ—Ä–∞ 

‚öôÔ∏è Flowith-Module v2 ‚Äî –æ–ø–∏—Å–∞–Ω–∏–µ –∏ –ø—Ä–∏–Ω—Ü–∏–ø —Ä–∞–±–æ—Ç—ã
Flowith-Module v2 ‚Äî —ç—Ç–æ –∞–≤—Ç–æ–Ω–æ–º–Ω—ã–π –º–æ–¥—É–ª—å –Ω–∞ Node.js + Docker, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–¥–∫–ª—é—á–∞–µ—Ç
Flowith (Gemini 2.5 Flash) –∫ —Ç–≤–æ–µ–π —Å–∏—Å—Ç–µ–º–µ AI SUPER SYSTEM v6.
–û–Ω —Å–æ–±–∏—Ä–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ Twitter (X) –∏ Telegram, –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∏—Ö, —Ñ–∏–ª—å—Ç—Ä—É–µ—Ç —à—É–º,
–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–æ–ª—å–∫–æ ¬´—á–∏—Å—Ç—ã–µ¬ª —Å–∏–≥–Ω–∞–ª—ã –≤ Helius API –∏ –ò–ò –ì–æ–ª–∏–±–∞.

üîπ –ß—Ç–æ –¥–µ–ª–∞–µ—Ç –º–æ–¥—É–ª—å
1.	–ü–∞—Ä—Å–∏—Ç ~300 –∞–∫–∫–∞—É–Ω—Ç–æ–≤ X –∏ 30 —Å–∞–π—Ç–æ–≤ –ª–∏—Å—Ç–∏–Ω–≥–æ–≤.
2.	–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ö–∞–π–ø –ø–æ —Å–ª–æ–≤–∞–º, —ç–º–æ–¥–∑–∏ –∏ –ø–∞—Ç—Ç–µ—Ä–Ω–∞–º (üöÄ üî• üíé üê∏ #pump #gem –∏ —Ç.–¥.).
3.	–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∫–æ–Ω—Ç–µ–Ω—Ç —á–µ—Ä–µ–∑ Flowith / Gemini 2.5 Flash ‚Äî –∏–∑–≤–ª–µ–∫–∞–µ—Ç sentiment, –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –∏ –≤–æ–∑–º–æ–∂–Ω—ã–µ mint-–∞–¥—Ä–µ—Å–∞.
4.	–§–∏–ª—å—Ç—Ä—É–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ 3 —ç—Ç–∞–ø–∞ (–±–∞–∑–æ–≤—ã–π, –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–π, –∞–Ω—Ç–∏-rug check).
5.	–ü–µ—Ä–µ–¥–∞—ë—Ç –ø—Ä–æ—à–µ–¥—à–∏–µ —Ñ–∏–ª—å—Ç—Ä—ã —Ç–æ–∫–µ–Ω—ã –≤ Helius –∏ –ò–ò –ì–æ–ª–∏–±–∞ –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π –æ—Ü–µ–Ω–∫–∏ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ.

üîπ –ö–∞–∫ –≤—Å—Ç–∞–≤–∏—Ç—å –≤ —Å–∏—Å—Ç–µ–º—É
1.	–†–∞—Å–ø–∞–∫—É–π –∞—Ä—Ö–∏–≤ –≤ –∫–∞—Ç–∞–ª–æ–≥:
/services/flowith_module_v2/
2.	–°–∫–æ–ø–∏—Ä—É–π .env.example ‚Üí .env –∏ –≤–ø–∏—à–∏ —Å–≤–æ–∏ API-–∫–ª—é—á–∏:
ÔÇ∑	FLOWITH_KEY ‚Äì –∫–ª—é—á Flowith API
ÔÇ∑	HELIUS_KEY ‚Äì –∫–ª—é—á Helius
ÔÇ∑	GOLIB_API_URL ‚Äì —Å—Å—ã–ª–∫–∞ –Ω–∞ intake –ò–ò –ì–æ–ª–∏–±–∞
3.	–î–æ–±–∞–≤—å –±–ª–æ–∫ –∏–∑ docker-compose.flowith.yml –≤ –æ–±—â–∏–π docker-compose.ai.yml
(–∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –∑–∞–ø—É—Å—Ç–∏ –º–æ–¥—É–ª—å –æ—Ç–¥–µ–ª—å–Ω–æ)
4.	–ó–∞–ø—É—Å–∫:
docker-compose -f docker-compose.flowith.yml up -d --build
5.	–ü—Ä–æ–≤–µ—Ä–∫–∞:
–æ—Ç–∫—Ä–æ–π http://localhost:8095/api/flowith/status ‚Üí –¥–æ–ª–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å OK.

üîπ –ö–∞–∫ –æ–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞
ÔÇ∑	–ö–∞–∂–¥—ã–µ 10 –º–∏–Ω—É—Ç –º–æ–¥—É–ª—å —Å–∫–∞–Ω–∏—Ä—É–µ—Ç Twitter.
ÔÇ∑	–ï—Å–ª–∏ —Ñ–∏–∫—Å–∏—Ä—É–µ—Ç—Å—è —Ö–∞–π–ø –∏–ª–∏ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ ‚Üí –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –≤ –±—ã—Å—Ç—Ä—ã–π —Ä–µ–∂–∏–º (—Å–∫–∞–Ω –∫–∞–∂–¥—ã–µ 3 –º–∏–Ω).
ÔÇ∑	–í—Å–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ö–æ–¥—è—Ç —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é –∏ –∞–Ω–∞–ª–∏–∑ Flowith.
ÔÇ∑	–í–∞–ª–∏–¥–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã —Å—Ä–∞–∑—É —É—Ö–æ–¥—è—Ç –≤ Helius –∏ –ò–ò –ì–æ–ª–∏–±–∞.
ÔÇ∑	–õ–æ–≥–∏ –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ /logs/flowith.log.

üß© –†–µ–∑—É–ª—å—Ç–∞—Ç:
–ú–æ–¥—É–ª—å –¥–µ–π—Å—Ç–≤—É–µ—Ç –∫–∞–∫ ¬´—Å–µ–Ω—Å–æ—Ä–Ω—ã–π —Ä–∞–¥–∞—Ä¬ª –≤ —Ç–≤–æ–µ–π —Å–∏—Å—Ç–µ–º–µ ‚Äî
—Å–∞–º –∏—â–µ—Ç –Ω–æ–≤—ã–µ –º–µ–º–∫–æ–∏–Ω—ã, –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç —Ö–∞–π–ø—ã,
–æ—á–∏—â–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏ –ø–µ—Ä–µ–¥–∞—ë—Ç –≤—Å—ë —á–∏—Å—Ç–æ, —Ç–æ—á–Ω–æ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.

–ù–æ —è –º–æ–≥—É –≤—ã–¥–∞—Ç—å —Ç–µ–±–µ –ø–æ–ª–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤, —á—Ç–æ–±—ã —Ç—ã (–∏–ª–∏ —Ñ—Ä–∏–ª–∞–Ω—Å–µ—Ä) —Å–∫–æ–ø–∏—Ä–æ–≤–∞–ª–∏ –∏—Ö –≤ —Ç—É —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∫–∞—Ç–∞–ª–æ–≥–æ–≤, –∫–æ—Ç–æ—Ä—É—é —è –æ–ø–∏—Å—ã–≤–∞–ª.
–ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –≤—Å–µ–≥–æ –¥–≤–µ –∫–æ–º–∞–Ω–¥—ã:
tar -czf flowith_module_v2.tar.gz flowith_module_v2
zip -r flowith_module_v2.zip flowith_module_v2
–∏ –ø–æ–ª—É—á–∏—Ç—å –∞—Ä—Ö–∏–≤—ã.
–í–æ—Ç –≤—Å–µ —Ñ–∞–π–ª—ã:

üìÑ package.json
{
  "name": "flowith_module_v2",
  "version": "1.0.0",
  "description": "Flowith + Gemini 2.5 Flash integration module for AI Super System",
  "main": "modules/scheduler.js",
  "type": "module",
  "scripts": {
    "start": "node modules/scheduler.js",
    "test": "node modules/testRunner.js"
  },
  "dependencies": {
    "axios": "^1.7.3",
    "node-cron": "^3.0.3",
    "ioredis": "^5.3.2",
    "dotenv": "^16.3.1"
  }
}

üìÑ modules/flowithParser.js
import axios from "axios";
import Redis from "ioredis";
import dotenv from "dotenv";
dotenv.config();

const redis = new Redis(process.env.REDIS_URL);
const FLOWITH_URL = "https://api.flowith.io/v1/gemini";

export async function analyzeText(text) {
  if (!text || text.length < 10) return null;
  const cacheKey = `fw:${Buffer.from(text).toString("base64")}`;
  const cached = await redis.get(cacheKey);
  if (cached) return JSON.parse(cached);

  try {
    const res = await axios.post(
      FLOWITH_URL,
      {
        model: "gemini-2.5-flash",
        input: text,
        output_format: "json",
        max_output_tokens: 400
      },
      {
        headers: {
          Authorization: `Bearer ${process.env.FLOWITH_KEY}`,
          "Content-Type": "application/json"
        },
        timeout: 15000
      }
    );

    await redis.setex(cacheKey, 3600, JSON.stringify(res.data));
    return res.data;
  } catch (err) {
    console.error("Flowith error:", err.message);
    return null;
  }
}

üìÑ modules/filterEngine.js
const triggers = ["üöÄ","üåï","üî•","üíé","üê∏","pump","moon","gem","launch","mint"];
const banned = ["giveaway","airdrop","follow","retweet","bot","free","bonus"];

export function baseFilter(t) {
  if (!t) return false;
  const text = t.toLowerCase();
  if (banned.some(w => text.includes(w))) return false;
  return triggers.some(w => t.includes(w));
}

export function deepFilter(tweet, analysis) {
  if (!analysis) return false;
  if (analysis.sentiment?.score < 0.4) return false;
  if (tweet.engagement && tweet.engagement < 3) return false;
  return true;
}

üìÑ modules/twitterCollector.js
import { analyzeText } from "./flowithParser.js";
import { baseFilter, deepFilter } from "./filterEngine.js";
import { pushToHelius } from "./heliusBridge.js";

export async function processTweets(tweets) {
  for (const tw of tweets) {
    if (!baseFilter(tw.text)) continue;
    const analysis = await analyzeText(tw.text);
    if (!deepFilter(tw, analysis)) continue;

    const mint = extractMint(tw.text);
    if (mint) await pushToHelius({ mint, source: "twitter", text: tw.text });
  }
}

function extractMint(text) {
  const m = text.match(/[1-9A-HJ-NP-Za-km-z]{32,44}/);
  return m ? m[0] : null;
}

üìÑ modules/scheduler.js
import cron from "node-cron";
import fs from "fs";
import { processTweets } from "./twitterCollector.js";
import { processTelegram } from "./telegramCollector.js";
import dotenv from "dotenv";
dotenv.config();

const sources = JSON.parse(fs.readFileSync("./config/sources_twitter.json"));
const fastMode = new Set();

cron.schedule(`*/${process.env.MAIN_INTERVAL_MIN || 10} * * * *`, async () => {
  console.log("üîÑ Main 10-min cycle");
  await processTweets(sources);
});

cron.schedule(`*/${process.env.FAST_INTERVAL_MIN || 3} * * * *`, async () => {
  for (const acc of fastMode) await processTweets([acc]);
});

export function triggerFastMode(account) {
  fastMode.add(account);
  setTimeout(() => fastMode.delete(account), 30 * 60 * 1000);
}

cron.schedule("*/15 * * * *", async () => {
  console.log("üí¨ Telegram parsing");
  await processTelegram();
});

üìÑ modules/heliusBridge.js
import axios from "axios";
import dotenv from "dotenv";
dotenv.config();

export async function pushToHelius(payload) {
  try {
    await axios.post("https://api.helius.xyz/v0/events", payload, {
      headers: { Authorization: `Bearer ${process.env.HELIUS_KEY}` }
    });
    console.log("‚úÖ Sent to Helius:", payload.mint);
  } catch (err) {
    console.error("Helius error:", err.message);
  }
}

üìÑ modules/telegramCollector.js
export async function processTelegram() {
  console.log("Telegram collector placeholder");
  return;
}

üìÑ modules/logger.js
import fs from "fs";
export function log(msg) {
  const line = `[${new Date().toISOString()}] ${msg}\n`;
  fs.appendFileSync("./logs/flowith.log", line);
}

üìÑ config/filters.json
{
  "triggers": ["üöÄ","üåï","üî•","üíé","üê∏","pump","moon","gem","launch","mint"],
  "banned": ["giveaway","airdrop","follow","retweet","bot","free","bonus"]
}

üìÑ config/rules.json
{
  "main_interval_min": 10,
  "fast_interval_min": 3,
  "fast_mode_duration_min": 30
}

üìÑ config/test/sample_tweets.json
[
  { "text": "üöÄ New gem launching on Solana soon!", "engagement": 10 },
  { "text": "üî• Pump alert, next 100x memecoin", "engagement": 5 },
  { "text": "airdrop giveaway retweet pls", "engagement": 1 }
]

üìÑ config/test/sample_output.json
[
  {
    "text": "üöÄ New gem launching on Solana soon!",
    "sentiment": { "score": 0.9, "label": "bullish" },
    "entities": ["Solana", "launch"],
    "mint": "8Xy1r7Nf8AbhJ5YkPQvE61qZ8E1a9h2p6ZXQ9wPmzKqA"
  }
]

üìÑ docs/README_Flowith_Module.md
# Flowith Module v2

–ú–æ–¥—É–ª—å –ø–æ–¥–∫–ª—é—á–∞–µ—Ç Flowith (Gemini 2.5 Flash) –∫ AI Super System.
–ü–∞—Ä—Å–∏—Ç Twitter –∏ Telegram, –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç—ã –∏ –ø–µ—Ä–µ–¥–∞—ë—Ç –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–∏–≥–Ω–∞–ª—ã –≤ Helius –∏ Golib.

## –£—Å—Ç–∞–Ω–æ–≤–∫–∞
docker-compose -f docker-compose.flowith.yml up -d --build

## –ü—Ä–æ–≤–µ—Ä–∫–∞
–û—Ç–∫—Ä–æ–π `http://localhost:8095/api/flowith/status` ‚Üí `OK`

–ü–æ—Å–ª–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —ç—Ç–∏—Ö —Ñ–∞–π–ª–æ–≤ –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∫–∞—Ç–∞–ª–æ–≥–æ–≤
–≤—ã–ø–æ–ª–Ω–∏:
tar -czf flowith_module_v2.tar.gz flowith_module_v2
zip -r flowith_module_v2.zip flowith_module_v2
–∏ –ø–æ–ª—É—á–∏—à—å –¥–≤–∞ –∞—Ä—Ö–∏–≤–∞ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤ —Å–≤–æ—é —Å–∏—Å—Ç–µ–º—É.



‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶.
–í–æ—Ç —á—ë—Ç–∫–∞—è –∏ –Ω–∞–≥–ª—è–¥–Ω–∞—è –∞—Ä—Ö–∏—Ç—É—Ä–∞ Flowith-Module v2,
–æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω–∞—è –≤ –≤–∏–¥–µ —Å—Ö–µ–º—ã –∏ –ø–æ—è—Å–Ω–µ–Ω–∏–π ‚Äî –∫–∞–∫ –¥–ª—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Ñ—Ä–∏–ª–∞–Ω—Å–µ—Ä–∞.

üß≠ –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ Flowith-Module v2
(–ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–æ–≤–º–µ—Å—Ç–∏–º–∞ —Å AI SUPER SYSTEM v6)
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ                   AI SUPER SYSTEM v6                       ‚îÇ
‚îÇ  ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê  ‚îÇ
‚îÇ  ‚îÇ                  Flowith Module v2                   ‚îÇ  ‚îÇ
‚îÇ  ‚îÇ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÇ  ‚îÇ
‚îÇ  ‚îÇ                                                      ‚îÇ  ‚îÇ
‚îÇ  ‚îÇ  1. COLLECTORS (–°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö)                         ‚îÇ  ‚îÇ
‚îÇ  ‚îÇ  ‚îú‚îÄ‚îÄ twitterCollector.js ‚Üí –ø–∞—Ä—Å–∏–Ω–≥ 300 X-–∞–∫–∫–∞—É–Ω—Ç–æ–≤   ‚îÇ  ‚îÇ
‚îÇ  ‚îÇ  ‚îú‚îÄ‚îÄ telegramCollector.js ‚Üí —Å–±–æ—Ä –∏–∑ 15‚Äì30 –≥—Ä—É–ø–ø      ‚îÇ  ‚îÇ
‚îÇ  ‚îÇ  ‚îú‚îÄ‚îÄ sources_sites.json ‚Üí —Å–∞–π—Ç—ã –ª–∏—Å—Ç–∏–Ω–≥–æ–≤            ‚îÇ  ‚îÇ
‚îÇ  ‚îÇ                                                      ‚îÇ  ‚îÇ
‚îÇ  ‚îÇ  2. FILTER ENGINE (–û—á–∏—Å—Ç–∫–∞ –∏ –æ—Ç–±–æ—Ä)                  ‚îÇ  ‚îÇ
‚îÇ  ‚îÇ  ‚îú‚îÄ‚îÄ baseFilter() ‚Äì —É–¥–∞–ª—è–µ—Ç –º—É—Å–æ—Ä (–±–æ—Ç—ã, —Å–ø–∞–º)       ‚îÇ  ‚îÇ
‚îÇ  ‚îÇ  ‚îú‚îÄ‚îÄ deepFilter() ‚Äì –∞–Ω–∞–ª–∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∏ —ç–º–æ—Ü–∏–π        ‚îÇ  ‚îÇ
‚îÇ  ‚îÇ  ‚îú‚îÄ‚îÄ –∞–Ω—Ç–∏-RUG —Ñ–∏–ª—å—Ç—Ä—ã (RugCheck, GoPlus)             ‚îÇ  ‚îÇ
‚îÇ  ‚îÇ                                                      ‚îÇ  ‚îÇ
‚îÇ  ‚îÇ  3. FLOWITH / GEMINI LAYER (–ê–Ω–∞–ª–∏—Ç–∏–∫–∞)               ‚îÇ  ‚îÇ
‚îÇ  ‚îÇ  ‚îú‚îÄ‚îÄ flowithParser.js ‚Üí Gemini 2.5 Flash API         ‚îÇ  ‚îÇ
‚îÇ  ‚îÇ  ‚îú‚îÄ‚îÄ NLP –∞–Ω–∞–ª–∏–∑: sentiment, –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞, —ç–º–æ–¥–∑–∏   ‚îÇ  ‚îÇ
‚îÇ  ‚îÇ  ‚îú‚îÄ‚îÄ –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ mint-–∞–¥—Ä–µ—Å–æ–≤, —É–ø–æ–º–∏–Ω–∞–Ω–∏–π, –Ω–∞—Ä—Ä–∞—Ç–∏–≤–∞  ‚îÇ  ‚îÇ
‚îÇ  ‚îÇ                                                      ‚îÇ  ‚îÇ
‚îÇ  ‚îÇ  4. ENRICHMENT (–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–æ–≤)                    ‚îÇ  ‚îÇ
‚îÇ  ‚îÇ  ‚îú‚îÄ‚îÄ Solscan, DexScreener, Helius, GoPlus, RugCheck  ‚îÇ  ‚îÇ
‚îÇ  ‚îÇ  ‚îú‚îÄ‚îÄ –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ª–∏–∫–≤–∏–¥–Ω–æ—Å—Ç–∏, —Ö–æ–ª–¥–µ—Ä–æ–≤, dev-–≤–ª–∞–¥–µ–ª—å—Ü–∞‚îÇ  ‚îÇ
‚îÇ  ‚îÇ                                                      ‚îÇ  ‚îÇ
‚îÇ  ‚îÇ  5. PIPELINE                                         ‚îÇ  ‚îÇ
‚îÇ  ‚îÇ  ‚îú‚îÄ‚îÄ scheduler.js ‚Äì —Ü–∏–∫–ª—ã 10 –º–∏–Ω / 3 –º–∏–Ω / 30 –º–∏–Ω    ‚îÇ  ‚îÇ
‚îÇ  ‚îÇ  ‚îú‚îÄ‚îÄ Redis cache –¥–ª—è –ª–∏–º–∏—Ç–æ–≤ –∏ –±–∞—Ç—á–∏–Ω–≥–∞              ‚îÇ  ‚îÇ
‚îÇ  ‚îÇ  ‚îú‚îÄ‚îÄ logger.js ‚Äì –ª–æ–≥–∏, –∑–∞–¥–µ—Ä–∂–∫–∏, –æ—à–∏–±–∫–∏              ‚îÇ  ‚îÇ
‚îÇ  ‚îÇ                                                      ‚îÇ  ‚îÇ
‚îÇ  ‚îÇ  6. OUTPUT                                           ‚îÇ  ‚îÇ
‚îÇ  ‚îÇ  ‚îú‚îÄ‚îÄ heliusBridge.js ‚Äì –æ—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ Helius API  ‚îÇ  ‚îÇ
‚îÇ  ‚îÇ  ‚îú‚îÄ‚îÄ pushToHelius() ‚Üí mint-–∞–¥—Ä–µ—Å + sentiment + score ‚îÇ  ‚îÇ
‚îÇ  ‚îÇ  ‚îú‚îÄ‚îÄ Golib API Intake (/api/intake/twitter)          ‚îÇ  ‚îÇ
‚îÇ  ‚îÇ  ‚îú‚îÄ‚îÄ Web UI ‚Üí –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ—á–∏—â–µ–Ω–Ω—ã–µ —Å–∏–≥–Ω–∞–ª—ã           ‚îÇ  ‚îÇ
‚îÇ  ‚îÇ                                                      ‚îÇ  ‚îÇ
‚îÇ  ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò  ‚îÇ
‚îÇ          ‚Üë Redis  ‚Üë Flowith ‚Üë Helius ‚Üë Golib ‚Üë UI          ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò

‚öôÔ∏è –û—Å–Ω–æ–≤–Ω—ã–µ –ø–æ—Ç–æ–∫–∏ –¥–∞–Ω–Ω—ã—Ö
–≠—Ç–∞–ø	–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞	–§–∞–π–ª—ã / –°–µ—Ä–≤–∏—Å—ã
1. –°–±–æ—Ä	–ü–∞—Ä—Å–∏–Ω–≥ X, Telegram, —Å–∞–π—Ç–æ–≤ –ª–∏—Å—Ç–∏–Ω–≥–æ–≤	twitterCollector.js, telegramCollector.js
2. –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è 1	–£–¥–∞–ª–µ–Ω–∏–µ —Å–ø–∞–º–∞, —Ä–µ—Ç–≤–∏—Ç–æ–≤, –¥—É–±–ª–µ–π	filterEngine.js
3. –ê–Ω–∞–ª–∏–∑ Flowith	–û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Flowith (Gemini 2.5 Flash), sentiment-–∞–Ω–∞–ª–∏–∑	flowithParser.js
4. –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è 2	–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞, —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è —Ö–∞–π–ø–∞, —ç–º–æ–¥–∑–∏, —Å–ª–æ–≤	filterEngine.js
5. –í–∞–ª–∏–¥–∞—Ü–∏—è —Ç–æ–∫–µ–Ω–æ–≤	–ü—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ Solscan, GoPlus, RugCheck, Helius	heliusBridge.js
6. –û—á–∏—Å—Ç–∫–∞ 3 —É—Ä–æ–≤–Ω—è	–ò—Å–∫–ª—é—á–µ–Ω–∏–µ —Ñ–µ–π–∫–æ–≤, –±–æ—Ç–æ–≤, –Ω–∏–∑–∫–æ–π –ª–∏–∫–≤–∏–¥–Ω–æ—Å—Ç–∏	filterEngine.js
7. –û—Ç–ø—Ä–∞–≤–∫–∞	–í Helius –∏ –ò–ò –ì–æ–ª–∏–±–∞ (—á–µ—Ä–µ–∑ API)	heliusBridge.js
8. UI –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ	Mint-–∞–¥—Ä–µ—Å, Sentiment, Copy button	Web UI / API endpoint

üß© –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –≤ AI SUPER SYSTEM v6
–ö–æ–º–ø–æ–Ω–µ–Ω—Ç	–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ	–°–≤—è–∑—å
Flowith-Module v2	–û—Ç–¥–µ–ª—å–Ω—ã–π –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å (Docker)	–ü–æ–¥–∫–ª—é—á—ë–Ω –∫ ai_core —Å–µ—Ç–∏
Redis	–ö—ç—à –∏ –∫–æ–Ω—Ç—Ä–æ–ª—å –ª–∏–º–∏—Ç–æ–≤	redis://redis:6379
Helius API	–ü—Ä–∏—ë–º mint-–∞–¥—Ä–µ—Å–æ–≤ –∏ —Å–æ–±—ã—Ç–∏–π	—á–µ—Ä–µ–∑ heliusBridge.js
Golib API	–ü—Ä–∏—ë–º –¥–∞–Ω–Ω—ã—Ö –≤ –ò–ò (intake endpoint)	—á–µ—Ä–µ–∑ GOLIB_API_URL
Web UI	–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏–≥–Ω–∞–ª–æ–≤	/api/flowith/
Nginx Gateway	–ú–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö API	–ø–æ—Ä—Ç 8095 ‚Üí gateway:8080

üîê –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ
ÔÇ∑	–í—Å–µ –∫–ª—é—á–∏ (FLOWITH_KEY, HELIUS_KEY, GOLIB_API_URL) —Ö—Ä–∞–Ω—è—Ç—Å—è –≤ .env
ÔÇ∑	–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∏–∑–æ–ª–∏—Ä–æ–≤–∞–Ω –≤ —Å–µ—Ç–∏ ai_core
ÔÇ∑	Redis —É–ø—Ä–∞–≤–ª—è–µ—Ç –ª–∏–º–∏—Ç–∞–º–∏ –∏ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∞–º-–∑–∞–ø—Ä–æ—Å—ã
ÔÇ∑	Docker –ø–æ–∑–≤–æ–ª—è–µ—Ç –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞—Ç—å Flowith-–º–æ–¥—É–ª—å
(–º–æ–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å 2‚Äì3 –∫–æ–ø–∏–∏ —Å —Ä–∞–∑–Ω—ã–º–∏ –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏ X)

üß† –û—Å–Ω–æ–≤–Ω–∞—è –∏–¥–µ—è
Flowith-Module v2 ‚Äî —ç—Ç–æ —É–º–Ω—ã–π —Ñ–∏–ª—å—Ç—Ä –∏ –º–æ—Å—Ç –º–µ–∂–¥—É —Å–æ—Ü—Å–µ—Ç—è–º–∏ –∏ —Ç–≤–æ–∏–º –ò–ò –Ω–∞—à–µ–π
–û–Ω —Å–∞–º:
ÔÇ∑	–∏—â–µ—Ç –Ω–æ–≤—ã–µ –º–µ–º–∫–æ–∏–Ω—ã –∏ —Ö–∞–π–ø—ã,
ÔÇ∑	–∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —ç–º–æ—Ü–∏–∏ –∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ X,
ÔÇ∑	—Ñ–∏–ª—å—Ç—Ä—É–µ—Ç —Å–ø–∞–º –∏ —Å–∫–∞–º—ã,
ÔÇ∑	–∏ –ø–µ—Ä–µ–¥–∞—ë—Ç —Ç–æ–ª—å–∫–æ ¬´–∑–æ–ª–æ—Ç—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é¬ª –≤ —è–¥—Ä–æ —Å–∏—Å—Ç–µ–º—ã.



–í–∞–∂–Ω–æ!!!   –í—Å–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã ,,–ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞, —Ñ–∏–ª—å—Ç—Ä—ã, –∞–∫–∫–∞—É–Ω—Ç—ã –∏ –¥—Ä. —è –ø–æ—Ç–æ–º –æ—Ç–¥–µ–ª—å–Ω–æ –¥–∞–º –∏  –∑–∞—à—å–µ–º –æ—Ç–¥–µ–ª—å–Ω–æ –≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã–µ –ø–∞–ø–∫–∏. –û—Ç —Ç—É–¥–∞ —É–∂–µ –Ω–∞—à–∞ —Å–∏—Å—Ç–µ–º–∞ –±—É–¥–µ—Ç –ø–æ–¥–≥—Ä—É–∂–∞—Ç—å –≤—Å–µ –ø—Ä–∞–≤–∏–ª–∞.

